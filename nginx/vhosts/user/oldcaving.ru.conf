server {
	server_name oldcaving.ru www.oldcaving.ru;
	charset off;
	index index.php;
	disable_symlinks if_not_owner from=$root_path;
	include /etc/nginx/vhosts-includes/*.conf;
	include /etc/nginx/vhosts-resources/oldcaving.ru/*.conf;
	access_log /var/www/httpd-logs/oldcaving.ru.access.log;
	error_log /var/www/httpd-logs/oldcaving.ru.error.log notice;
	ssi on;
	set $root_path /var/www/user/data/www/oldcaving.ru;
	root $root_path;
	include /etc/nginx/vhosts-resources/user/*.conf;
	location @fallback {
		proxy_pass http://127.0.0.1:8080;
		proxy_redirect http://127.0.0.1:8080 /;
		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Forwarded-Port $server_port;
	}
	return 301 https://$host:443$request_uri;
	location / {
		location ~ [^/]\.ph(p\d*|tml)$ {
			try_files /does_not_exists @fallback;
		}
		location ~* ^.+\.(jpg|jpeg|gif|png|svg|js|css|mp3|ogg|mpe?g|avi|zip|gz|bz2?|rar|swf)$ {
			try_files $uri $uri/ @fallback;
		}
		location / {
			try_files /does_not_exists @fallback;
		}
	}
	listen 127.0.0.1:80;
}
server {
	server_name oldcaving.ru www.oldcaving.ru;
	ssl_certificate "/var/www/httpd-cert/user/oldcaving.ru_le1.crt";
	ssl_certificate_key "/var/www/httpd-cert/user/oldcaving.ru_le1.key";
	ssl_ciphers EECDH:+AES256:-3DES:RSA+AES:!NULL:!RC4;
	ssl_prefer_server_ciphers on;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	add_header Strict-Transport-Security "max-age=31536000;";
	ssl_dhparam /etc/ssl/certs/dhparam4096.pem;
	charset off;
	index index.php;
	disable_symlinks if_not_owner from=$root_path;
	include /etc/nginx/vhosts-includes/*.conf;
	include /etc/nginx/vhosts-resources/oldcaving.ru/*.conf;
	access_log /var/www/httpd-logs/oldcaving.ru.access.log;
	error_log /var/www/httpd-logs/oldcaving.ru.error.log notice;
	ssi on;
	set $root_path /var/www/user/data/www/oldcaving.ru;
	root $root_path;
	include /etc/nginx/vhosts-resources/user/*.conf;
	location / {
		location ~ [^/]\.ph(p\d*|tml)$ {
			try_files /does_not_exists @fallback;
		}
		location ~* ^.+\.(jpg|jpeg|gif|png|svg|js|css|mp3|ogg|mpe?g|avi|zip|gz|bz2?|rar|swf)$ {
			try_files $uri $uri/ @fallback;
		}
		location / {
			try_files /does_not_exists @fallback;
		}
	}
	location @fallback {
		proxy_pass http://127.0.0.1:8080;
		proxy_redirect http://127.0.0.1:8080 /;
		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Forwarded-Port $server_port;
	}
	listen 127.0.0.1:443 ssl;
}
